// <auto-generated />
using System;
using FamilyTreeWeb.DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FamilyTreeWeb.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240402220923_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.GenealogyTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("GenealogyTrees");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GenealogyTreeId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GenealogyTreeId");

                    b.HasIndex("UserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeathPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("GenealogyTreeId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GenealogyTreeId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PersonId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RelatedPerson1Id")
                        .HasColumnType("integer");

                    b.Property<int>("RelatedPerson2Id")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RelatedPerson1Id");

                    b.HasIndex("RelatedPerson2Id");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.SpecialRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PersonId");

                    b.ToTable("SpecialRecords");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Statistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GenealogyTreeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GenealogyTreeId");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PersonRelation", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("RelationsId")
                        .HasColumnType("integer");

                    b.HasKey("PersonId", "RelationsId");

                    b.HasIndex("RelationsId");

                    b.ToTable("PersonRelations", (string)null);
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Calendar", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Event", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.Person", "Person")
                        .WithMany("Events")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.GenealogyTree", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.User", "Owner")
                        .WithMany("GenealogyTrees")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Permission", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.GenealogyTree", "GenealogyTree")
                        .WithMany("Permissions")
                        .HasForeignKey("GenealogyTreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyTreeWeb.DAL.Models.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenealogyTree");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Person", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.GenealogyTree", null)
                        .WithMany("Persons")
                        .HasForeignKey("GenealogyTreeId");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Photo", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.Event", null)
                        .WithMany("Photos")
                        .HasForeignKey("EventId");

                    b.HasOne("FamilyTreeWeb.DAL.Models.Person", "Person")
                        .WithMany("Photos")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Relation", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.Person", "RelatedPerson1")
                        .WithMany()
                        .HasForeignKey("RelatedPerson1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyTreeWeb.DAL.Models.Person", "RelatedPerson2")
                        .WithMany()
                        .HasForeignKey("RelatedPerson2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedPerson1");

                    b.Navigation("RelatedPerson2");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.SpecialRecord", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.Event", null)
                        .WithMany("SpecialRecords")
                        .HasForeignKey("EventId");

                    b.HasOne("FamilyTreeWeb.DAL.Models.Person", "Person")
                        .WithMany("SpecialRecords")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Statistics", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.GenealogyTree", "Tree")
                        .WithMany()
                        .HasForeignKey("GenealogyTreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("PersonRelation", b =>
                {
                    b.HasOne("FamilyTreeWeb.DAL.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyTreeWeb.DAL.Models.Relation", null)
                        .WithMany()
                        .HasForeignKey("RelationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Event", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("SpecialRecords");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.GenealogyTree", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.Person", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Photos");

                    b.Navigation("SpecialRecords");
                });

            modelBuilder.Entity("FamilyTreeWeb.DAL.Models.User", b =>
                {
                    b.Navigation("GenealogyTrees");

                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
