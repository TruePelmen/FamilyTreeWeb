// <auto-generated />
using System;
using FamilyTreeWeb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FamilyTreeWeb.Data.Migrations
{
    [DbContext(typeof(FamilyTreeDbContext))]
    partial class FamilyTreeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FamilyTreeWeb.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("EventPlace")
                        .HasColumnType("text");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TreeId")
                        .HasColumnType("integer");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TreeId");

                    b.HasIndex("UserLogin");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("DeathDate")
                        .HasColumnType("date");

                    b.Property<string>("DeathPlace")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdTree")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaidenName")
                        .HasColumnType("text");

                    b.Property<string>("OtherNameVariants")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdTree");

                    b.ToTable("People");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("MainPhoto")
                        .HasColumnType("boolean");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Relationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId1")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId2")
                        .HasColumnType("integer");

                    b.Property<string>("RelationshipType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId1");

                    b.HasIndex("PersonId2");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Tree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrimaryPerson")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.User", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Event", b =>
                {
                    b.HasOne("FamilyTreeWeb.Models.Person", "Person")
                        .WithMany("Events")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Permission", b =>
                {
                    b.HasOne("FamilyTreeWeb.Models.Tree", "Tree")
                        .WithMany("Permissions")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyTreeWeb.Models.User", "UserLoginNavigation")
                        .WithMany("Permissions")
                        .HasForeignKey("UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");

                    b.Navigation("UserLoginNavigation");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Person", b =>
                {
                    b.HasOne("FamilyTreeWeb.Models.Tree", "Tree")
                        .WithMany("People")
                        .HasForeignKey("IdTree")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Photo", b =>
                {
                    b.HasOne("FamilyTreeWeb.Models.Person", "Person")
                        .WithMany("Photos")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Relationship", b =>
                {
                    b.HasOne("FamilyTreeWeb.Models.Person", "PersonId1Navigation")
                        .WithMany("RelationshipPersonId1Navigations")
                        .HasForeignKey("PersonId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyTreeWeb.Models.Person", "PersonId2Navigation")
                        .WithMany("RelationshipPersonId2Navigations")
                        .HasForeignKey("PersonId2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonId1Navigation");

                    b.Navigation("PersonId2Navigation");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Person", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Photos");

                    b.Navigation("RelationshipPersonId1Navigations");

                    b.Navigation("RelationshipPersonId2Navigations");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.Tree", b =>
                {
                    b.Navigation("People");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("FamilyTreeWeb.Models.User", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
